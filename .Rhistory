lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
})
lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
match(genes$ensembl_gene_id, order)
})
lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
na.omit(match(genes$ensembl_gene_id, order))
})
lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
true_order <- na.omit(match(genes$ensembl_gene_id, order))
length(true_order)
})
lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
true_order <- na.omit(match(order, genes$ensembl_gene_id))
length(true_order)
})
lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
true_order <- match(order, genes$ensembl_gene_id)
length(true_order)
})
lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
true_order <- match(order, genes$ensembl_gene_id)
genes[true_order, ]
})
library(dplyr)
bind_rows(lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
true_order <- match(order, genes$ensembl_gene_id)
genes[true_order, ]
}))
test <- bind_rows(lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
true_order <- match(order, genes$ensembl_gene_id)
genes[true_order, ]
}))
View(test)
test <- bind_cols(lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
true_order <- match(order, genes$ensembl_gene_id)
genes[true_order, ]
}))
View(test)
View(test)
View(orths)
rm(test)
genes.trueorder <- bind_cols(lapply(names(orths), function(sp_name){
order <- orths[,sp_name]
genes <- genes.list[[sp_name]]
true_order <- match(order, genes$ensembl_gene_id)
genes[true_order, ]
}))
rm(orths, genes.list)
View(genes.trueorder)
genes.trueorder <- na.omit(genes.trueorder)
View(genes.trueorder)
names(genes.trueorder[,c(1:5, 7:10, 12:15)])
GRIMM.table <- genes.trueorder[,c(1:5, 7:10, 12:15)]
View(GRIMM.table)
write.table(GRIMM.table, './R/Clean/output_data/GRIMM.txt', row.names = F, quote = F)
source('./R/Clean/GRIMM_format.R')
rm(list=ls())
### Query data
## Get table of orthologs sp1_gene_id / sp2_gene_id ... / ... spX_gene_id
source('./R/Query/getOrthologs.R')
## Get coorinates for every gene of every species sp1: gene_id / chr / start / stop / strand
source("./R/Query/getCoords.R")
## All data saved in ./R/Query/output_data
### Clean data
## Separate file per species
lapply(c('albimanus', 'atroparvus', 'gambiae'), function(sp){
files <- list.files('./R/Clean')
file <- paste0('./R/Clean/' ,files[grep(sp, files)])
source(file)
})
## Conmbine all sps in one table for GRIMM_synteny
source('./R/Clean/GRIMM_format.R')
lapply(c('albimanus', 'atroparvus', 'gambiae'), function(sp){
files <- list.files('./R/Clean')
file <- paste0('./R/Clean/' ,files[grep(sp, files)])
source(file, echo=F)
})
## Separate file per species
lapply(c('albimanus', 'atroparvus', 'gambiae'), function(sp){
files <- list.files('./R/Clean')
file <- paste0('./R/Clean/' ,files[grep(sp, files)])
source(file, echo=F)
return('')
})
## Conmbine all sps in one table for GRIMM_synteny
source('./R/Clean/GRIMM_format.R')
lapply(c('albimanus', 'atroparvus', 'gambiae'), function(sp){
files <- list.files('./R/Clean')
file <- paste0('./R/Clean/' ,files[grep(sp, files)])
source(file, echo=F)
return(NULL)
})
source('./R/Clean/GRIMM_format.R')
